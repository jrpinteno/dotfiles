puts "Homebrew - Installing common tools/apps..."

tap "buo/cask-upgrade"    # 'brew cu' (https://github.com/buo/homebrew-cask-upgrade)
tap "homebrew/autoupdate" # (https://github.com/Homebrew/homebrew-autoupdate)

# CLI tools / formulae
brew "bat"        # Cat clone with syntax highlighting and Git integration
brew "bat-extras" # Some bash scripts on top of bat
brew "broot"      # Tree navigation
brew "fzf"        # Fuzzy finder
brew "gping"
brew "lsd"        # Rewrite of ls
brew "mcfly"      # Navigate shell history
brew "tldr"       # Simplified man pages on steroids with examples
brew "wget"

cask_args appdir: "~/Applications"

cask "1password"
cask "boop"                     # Tool to perform various text operations
cask "font-fira-code"
cask "font-fira-code-nerd-font"
cask "font-monaspace"
cask "iterm2"
cask "librewolf"

userEnvironment = ENV["HOMEBREW_USER_ENVIRONMENT"]

if userEnvironment.nil? || userEnvironment.empty?
	puts "HOMEBREW_USER_ENVIRONMENT is not set. Please set it to 'home' or 'work'."
	exit(1)
else
	puts "HOMEBREW_USER_ENVIRONMENT is set to: #{userEnvironment}"
end

if userEnvironment.include?("home") && userEnvironment.include?("work")
	puts "Error: HOMEBREW_USER_ENVIRONMENT cannot include both 'home' and 'work'."
	exit(1)
end

brewfiles_to_load = []

case userEnvironment
when /home/
	brewfiles_to_load << File.expand_path("~/.config/homebrew/Brewfile.home")
when /work/
	brewfiles_to_load << File.expand_path("~/.config/homebrew/Brewfile.work")
end

if userEnvironment.include?("dev")
	brewfiles_to_load << File.expand_path("~/.config/homebrew/Brewfile.dev")
end

brewfiles_to_load.each do |brewfile|
	instance_eval(File.read(brewfile)) if File.exist?(brewfile)
end
